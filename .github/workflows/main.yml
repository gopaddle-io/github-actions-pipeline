# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [main]
  
env:
  endPoint: "<gopaddle_endpoint>"
  projectID: "<project_id>"
  applicationID: "<application_id>"
  serviceName: "<service_name>"
  serviceID: "<service_id>"
  containerID: <container_id>
  imageName: "<image_name>"
  
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: "Build and push image"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/{{ env.imageName }}:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/{{ env.imageName }}:${{ github.sha }}
      - run: echo "DESC=$(echo -n ${{ github.event.head_commit.message }} | base64)" >> $GITHUB_ENV
      - name: Deploy Stage
        uses: fjogeleit/http-request-action@master
        with:
          url: "${{ env.endPoint }}/gateway/v1/${{ env.projectID }}/application/${{ env.applicationID }}"
          method: "PUT"
          bearerToken: ${{ secrets.GP_API_TOKEN }}
          data: '{"updateType":"buildUpdate","deploymentTemplateVersion":"draft","serviceGroups":[{"name":"${{ env.serviceName }}","id":"${{ env.serviceID }}","version":"draft","services":[{"id":"${{ env.containerID }}","serviceVersion":"draft","releaseConfig":{"image":"${{ secrets.REGISTRY_LOGIN_SERVER }}/{{ env.imageName }}:${{ github.sha }}"}}],"description":"${{ env.DESC }}"}]}'
